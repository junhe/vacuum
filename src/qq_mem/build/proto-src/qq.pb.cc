// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: qq.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "qq.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace qq {
class AddDocumentRequest_DocumentDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddDocumentRequest_Document>
     _instance;
} _AddDocumentRequest_Document_default_instance_;
class AddDocumentRequest_OptionsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddDocumentRequest_Options>
     _instance;
} _AddDocumentRequest_Options_default_instance_;
class AddDocumentRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddDocumentRequest>
     _instance;
} _AddDocumentRequest_default_instance_;
class StatusReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StatusReply>
     _instance;
} _StatusReply_default_instance_;
class HelloRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HelloRequest>
     _instance;
} _HelloRequest_default_instance_;
class HelloReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HelloReply>
     _instance;
} _HelloReply_default_instance_;

namespace protobuf_qq_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[6];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddDocumentRequest_Document, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddDocumentRequest_Document, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddDocumentRequest_Document, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddDocumentRequest_Document, body_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddDocumentRequest_Options, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddDocumentRequest_Options, save_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddDocumentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddDocumentRequest, document_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddDocumentRequest, options_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatusReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatusReply, ok_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatusReply, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloReply, message_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(AddDocumentRequest_Document)},
  { 8, -1, sizeof(AddDocumentRequest_Options)},
  { 14, -1, sizeof(AddDocumentRequest)},
  { 21, -1, sizeof(StatusReply)},
  { 28, -1, sizeof(HelloRequest)},
  { 34, -1, sizeof(HelloReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddDocumentRequest_Document_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddDocumentRequest_Options_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddDocumentRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StatusReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HelloRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HelloReply_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "qq.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _AddDocumentRequest_Document_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddDocumentRequest_Document_default_instance_);_AddDocumentRequest_Options_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddDocumentRequest_Options_default_instance_);_AddDocumentRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddDocumentRequest_default_instance_);_StatusReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StatusReply_default_instance_);_HelloRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HelloRequest_default_instance_);_HelloReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HelloReply_default_instance_);_AddDocumentRequest_default_instance_._instance.get_mutable()->document_ = const_cast< ::qq::AddDocumentRequest_Document*>(
      ::qq::AddDocumentRequest_Document::internal_default_instance());
  _AddDocumentRequest_default_instance_._instance.get_mutable()->options_ = const_cast< ::qq::AddDocumentRequest_Options*>(
      ::qq::AddDocumentRequest_Options::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\010qq.proto\022\002qq\"\307\001\n\022AddDocumentRequest\0221\n"
      "\010document\030\001 \001(\0132\037.qq.AddDocumentRequest."
      "Document\022/\n\007options\030\002 \001(\0132\036.qq.AddDocume"
      "ntRequest.Options\0324\n\010Document\022\r\n\005title\030\001"
      " \001(\t\022\013\n\003url\030\002 \001(\t\022\014\n\004body\030\003 \001(\t\032\027\n\007Optio"
      "ns\022\014\n\004save\030\001 \001(\010\"*\n\013StatusReply\022\n\n\002ok\030\001 "
      "\001(\010\022\017\n\007message\030\002 \001(\t\"\034\n\014HelloRequest\022\014\n\004"
      "name\030\001 \001(\t\"\035\n\nHelloReply\022\017\n\007message\030\001 \001("
      "\t2t\n\010QQEngine\022.\n\010SayHello\022\020.qq.HelloRequ"
      "est\032\016.qq.HelloReply\"\000\0228\n\013AddDocument\022\026.q"
      "q.AddDocumentRequest\032\017.qq.StatusReply\"\000b"
      "\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 447);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "qq.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_qq_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddDocumentRequest_Document::kTitleFieldNumber;
const int AddDocumentRequest_Document::kUrlFieldNumber;
const int AddDocumentRequest_Document::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddDocumentRequest_Document::AddDocumentRequest_Document()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_qq_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qq.AddDocumentRequest.Document)
}
AddDocumentRequest_Document::AddDocumentRequest_Document(const AddDocumentRequest_Document& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.body().size() > 0) {
    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  // @@protoc_insertion_point(copy_constructor:qq.AddDocumentRequest.Document)
}

void AddDocumentRequest_Document::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AddDocumentRequest_Document::~AddDocumentRequest_Document() {
  // @@protoc_insertion_point(destructor:qq.AddDocumentRequest.Document)
  SharedDtor();
}

void AddDocumentRequest_Document::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddDocumentRequest_Document::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddDocumentRequest_Document::descriptor() {
  protobuf_qq_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qq_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddDocumentRequest_Document& AddDocumentRequest_Document::default_instance() {
  protobuf_qq_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddDocumentRequest_Document* AddDocumentRequest_Document::New(::google::protobuf::Arena* arena) const {
  AddDocumentRequest_Document* n = new AddDocumentRequest_Document;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddDocumentRequest_Document::Clear() {
// @@protoc_insertion_point(message_clear_start:qq.AddDocumentRequest.Document)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AddDocumentRequest_Document::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qq.AddDocumentRequest.Document)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string title = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qq.AddDocumentRequest.Document.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qq.AddDocumentRequest.Document.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string body = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_body()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->body().data(), static_cast<int>(this->body().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qq.AddDocumentRequest.Document.body"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qq.AddDocumentRequest.Document)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qq.AddDocumentRequest.Document)
  return false;
#undef DO_
}

void AddDocumentRequest_Document::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qq.AddDocumentRequest.Document)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qq.AddDocumentRequest.Document.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->title(), output);
  }

  // string url = 2;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qq.AddDocumentRequest.Document.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  // string body = 3;
  if (this->body().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->body().data(), static_cast<int>(this->body().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qq.AddDocumentRequest.Document.body");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->body(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qq.AddDocumentRequest.Document)
}

::google::protobuf::uint8* AddDocumentRequest_Document::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qq.AddDocumentRequest.Document)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qq.AddDocumentRequest.Document.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->title(), target);
  }

  // string url = 2;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qq.AddDocumentRequest.Document.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  // string body = 3;
  if (this->body().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->body().data(), static_cast<int>(this->body().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qq.AddDocumentRequest.Document.body");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->body(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qq.AddDocumentRequest.Document)
  return target;
}

size_t AddDocumentRequest_Document::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qq.AddDocumentRequest.Document)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string title = 1;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string url = 2;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // string body = 3;
  if (this->body().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->body());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddDocumentRequest_Document::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qq.AddDocumentRequest.Document)
  GOOGLE_DCHECK_NE(&from, this);
  const AddDocumentRequest_Document* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddDocumentRequest_Document>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qq.AddDocumentRequest.Document)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qq.AddDocumentRequest.Document)
    MergeFrom(*source);
  }
}

void AddDocumentRequest_Document::MergeFrom(const AddDocumentRequest_Document& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qq.AddDocumentRequest.Document)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.body().size() > 0) {

    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
}

void AddDocumentRequest_Document::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qq.AddDocumentRequest.Document)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddDocumentRequest_Document::CopyFrom(const AddDocumentRequest_Document& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qq.AddDocumentRequest.Document)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddDocumentRequest_Document::IsInitialized() const {
  return true;
}

void AddDocumentRequest_Document::Swap(AddDocumentRequest_Document* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddDocumentRequest_Document::InternalSwap(AddDocumentRequest_Document* other) {
  using std::swap;
  title_.Swap(&other->title_);
  url_.Swap(&other->url_);
  body_.Swap(&other->body_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddDocumentRequest_Document::GetMetadata() const {
  protobuf_qq_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qq_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddDocumentRequest_Document

// string title = 1;
void AddDocumentRequest_Document::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddDocumentRequest_Document::title() const {
  // @@protoc_insertion_point(field_get:qq.AddDocumentRequest.Document.title)
  return title_.GetNoArena();
}
void AddDocumentRequest_Document::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qq.AddDocumentRequest.Document.title)
}
#if LANG_CXX11
void AddDocumentRequest_Document::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qq.AddDocumentRequest.Document.title)
}
#endif
void AddDocumentRequest_Document::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qq.AddDocumentRequest.Document.title)
}
void AddDocumentRequest_Document::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qq.AddDocumentRequest.Document.title)
}
::std::string* AddDocumentRequest_Document::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:qq.AddDocumentRequest.Document.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddDocumentRequest_Document::release_title() {
  // @@protoc_insertion_point(field_release:qq.AddDocumentRequest.Document.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddDocumentRequest_Document::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:qq.AddDocumentRequest.Document.title)
}

// string url = 2;
void AddDocumentRequest_Document::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddDocumentRequest_Document::url() const {
  // @@protoc_insertion_point(field_get:qq.AddDocumentRequest.Document.url)
  return url_.GetNoArena();
}
void AddDocumentRequest_Document::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qq.AddDocumentRequest.Document.url)
}
#if LANG_CXX11
void AddDocumentRequest_Document::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qq.AddDocumentRequest.Document.url)
}
#endif
void AddDocumentRequest_Document::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qq.AddDocumentRequest.Document.url)
}
void AddDocumentRequest_Document::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qq.AddDocumentRequest.Document.url)
}
::std::string* AddDocumentRequest_Document::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:qq.AddDocumentRequest.Document.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddDocumentRequest_Document::release_url() {
  // @@protoc_insertion_point(field_release:qq.AddDocumentRequest.Document.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddDocumentRequest_Document::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:qq.AddDocumentRequest.Document.url)
}

// string body = 3;
void AddDocumentRequest_Document::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddDocumentRequest_Document::body() const {
  // @@protoc_insertion_point(field_get:qq.AddDocumentRequest.Document.body)
  return body_.GetNoArena();
}
void AddDocumentRequest_Document::set_body(const ::std::string& value) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qq.AddDocumentRequest.Document.body)
}
#if LANG_CXX11
void AddDocumentRequest_Document::set_body(::std::string&& value) {
  
  body_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qq.AddDocumentRequest.Document.body)
}
#endif
void AddDocumentRequest_Document::set_body(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qq.AddDocumentRequest.Document.body)
}
void AddDocumentRequest_Document::set_body(const char* value, size_t size) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qq.AddDocumentRequest.Document.body)
}
::std::string* AddDocumentRequest_Document::mutable_body() {
  
  // @@protoc_insertion_point(field_mutable:qq.AddDocumentRequest.Document.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddDocumentRequest_Document::release_body() {
  // @@protoc_insertion_point(field_release:qq.AddDocumentRequest.Document.body)
  
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddDocumentRequest_Document::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    
  } else {
    
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:qq.AddDocumentRequest.Document.body)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddDocumentRequest_Options::kSaveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddDocumentRequest_Options::AddDocumentRequest_Options()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_qq_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qq.AddDocumentRequest.Options)
}
AddDocumentRequest_Options::AddDocumentRequest_Options(const AddDocumentRequest_Options& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  save_ = from.save_;
  // @@protoc_insertion_point(copy_constructor:qq.AddDocumentRequest.Options)
}

void AddDocumentRequest_Options::SharedCtor() {
  save_ = false;
  _cached_size_ = 0;
}

AddDocumentRequest_Options::~AddDocumentRequest_Options() {
  // @@protoc_insertion_point(destructor:qq.AddDocumentRequest.Options)
  SharedDtor();
}

void AddDocumentRequest_Options::SharedDtor() {
}

void AddDocumentRequest_Options::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddDocumentRequest_Options::descriptor() {
  protobuf_qq_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qq_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddDocumentRequest_Options& AddDocumentRequest_Options::default_instance() {
  protobuf_qq_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddDocumentRequest_Options* AddDocumentRequest_Options::New(::google::protobuf::Arena* arena) const {
  AddDocumentRequest_Options* n = new AddDocumentRequest_Options;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddDocumentRequest_Options::Clear() {
// @@protoc_insertion_point(message_clear_start:qq.AddDocumentRequest.Options)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  save_ = false;
  _internal_metadata_.Clear();
}

bool AddDocumentRequest_Options::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qq.AddDocumentRequest.Options)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool save = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &save_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qq.AddDocumentRequest.Options)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qq.AddDocumentRequest.Options)
  return false;
#undef DO_
}

void AddDocumentRequest_Options::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qq.AddDocumentRequest.Options)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool save = 1;
  if (this->save() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->save(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qq.AddDocumentRequest.Options)
}

::google::protobuf::uint8* AddDocumentRequest_Options::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qq.AddDocumentRequest.Options)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool save = 1;
  if (this->save() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->save(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qq.AddDocumentRequest.Options)
  return target;
}

size_t AddDocumentRequest_Options::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qq.AddDocumentRequest.Options)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool save = 1;
  if (this->save() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddDocumentRequest_Options::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qq.AddDocumentRequest.Options)
  GOOGLE_DCHECK_NE(&from, this);
  const AddDocumentRequest_Options* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddDocumentRequest_Options>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qq.AddDocumentRequest.Options)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qq.AddDocumentRequest.Options)
    MergeFrom(*source);
  }
}

void AddDocumentRequest_Options::MergeFrom(const AddDocumentRequest_Options& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qq.AddDocumentRequest.Options)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.save() != 0) {
    set_save(from.save());
  }
}

void AddDocumentRequest_Options::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qq.AddDocumentRequest.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddDocumentRequest_Options::CopyFrom(const AddDocumentRequest_Options& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qq.AddDocumentRequest.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddDocumentRequest_Options::IsInitialized() const {
  return true;
}

void AddDocumentRequest_Options::Swap(AddDocumentRequest_Options* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddDocumentRequest_Options::InternalSwap(AddDocumentRequest_Options* other) {
  using std::swap;
  swap(save_, other->save_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddDocumentRequest_Options::GetMetadata() const {
  protobuf_qq_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qq_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddDocumentRequest_Options

// bool save = 1;
void AddDocumentRequest_Options::clear_save() {
  save_ = false;
}
bool AddDocumentRequest_Options::save() const {
  // @@protoc_insertion_point(field_get:qq.AddDocumentRequest.Options.save)
  return save_;
}
void AddDocumentRequest_Options::set_save(bool value) {
  
  save_ = value;
  // @@protoc_insertion_point(field_set:qq.AddDocumentRequest.Options.save)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddDocumentRequest::kDocumentFieldNumber;
const int AddDocumentRequest::kOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddDocumentRequest::AddDocumentRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_qq_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qq.AddDocumentRequest)
}
AddDocumentRequest::AddDocumentRequest(const AddDocumentRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_document()) {
    document_ = new ::qq::AddDocumentRequest_Document(*from.document_);
  } else {
    document_ = NULL;
  }
  if (from.has_options()) {
    options_ = new ::qq::AddDocumentRequest_Options(*from.options_);
  } else {
    options_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:qq.AddDocumentRequest)
}

void AddDocumentRequest::SharedCtor() {
  ::memset(&document_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&options_) -
      reinterpret_cast<char*>(&document_)) + sizeof(options_));
  _cached_size_ = 0;
}

AddDocumentRequest::~AddDocumentRequest() {
  // @@protoc_insertion_point(destructor:qq.AddDocumentRequest)
  SharedDtor();
}

void AddDocumentRequest::SharedDtor() {
  if (this != internal_default_instance()) delete document_;
  if (this != internal_default_instance()) delete options_;
}

void AddDocumentRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddDocumentRequest::descriptor() {
  protobuf_qq_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qq_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddDocumentRequest& AddDocumentRequest::default_instance() {
  protobuf_qq_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddDocumentRequest* AddDocumentRequest::New(::google::protobuf::Arena* arena) const {
  AddDocumentRequest* n = new AddDocumentRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddDocumentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:qq.AddDocumentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && document_ != NULL) {
    delete document_;
  }
  document_ = NULL;
  if (GetArenaNoVirtual() == NULL && options_ != NULL) {
    delete options_;
  }
  options_ = NULL;
  _internal_metadata_.Clear();
}

bool AddDocumentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qq.AddDocumentRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .qq.AddDocumentRequest.Document document = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_document()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .qq.AddDocumentRequest.Options options = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qq.AddDocumentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qq.AddDocumentRequest)
  return false;
#undef DO_
}

void AddDocumentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qq.AddDocumentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .qq.AddDocumentRequest.Document document = 1;
  if (this->has_document()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->document_, output);
  }

  // .qq.AddDocumentRequest.Options options = 2;
  if (this->has_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->options_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qq.AddDocumentRequest)
}

::google::protobuf::uint8* AddDocumentRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qq.AddDocumentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .qq.AddDocumentRequest.Document document = 1;
  if (this->has_document()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->document_, deterministic, target);
  }

  // .qq.AddDocumentRequest.Options options = 2;
  if (this->has_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->options_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qq.AddDocumentRequest)
  return target;
}

size_t AddDocumentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qq.AddDocumentRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .qq.AddDocumentRequest.Document document = 1;
  if (this->has_document()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->document_);
  }

  // .qq.AddDocumentRequest.Options options = 2;
  if (this->has_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->options_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddDocumentRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qq.AddDocumentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddDocumentRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddDocumentRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qq.AddDocumentRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qq.AddDocumentRequest)
    MergeFrom(*source);
  }
}

void AddDocumentRequest::MergeFrom(const AddDocumentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qq.AddDocumentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_document()) {
    mutable_document()->::qq::AddDocumentRequest_Document::MergeFrom(from.document());
  }
  if (from.has_options()) {
    mutable_options()->::qq::AddDocumentRequest_Options::MergeFrom(from.options());
  }
}

void AddDocumentRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qq.AddDocumentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddDocumentRequest::CopyFrom(const AddDocumentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qq.AddDocumentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddDocumentRequest::IsInitialized() const {
  return true;
}

void AddDocumentRequest::Swap(AddDocumentRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddDocumentRequest::InternalSwap(AddDocumentRequest* other) {
  using std::swap;
  swap(document_, other->document_);
  swap(options_, other->options_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddDocumentRequest::GetMetadata() const {
  protobuf_qq_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qq_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddDocumentRequest

// .qq.AddDocumentRequest.Document document = 1;
bool AddDocumentRequest::has_document() const {
  return this != internal_default_instance() && document_ != NULL;
}
void AddDocumentRequest::clear_document() {
  if (GetArenaNoVirtual() == NULL && document_ != NULL) delete document_;
  document_ = NULL;
}
const ::qq::AddDocumentRequest_Document& AddDocumentRequest::document() const {
  const ::qq::AddDocumentRequest_Document* p = document_;
  // @@protoc_insertion_point(field_get:qq.AddDocumentRequest.document)
  return p != NULL ? *p : *reinterpret_cast<const ::qq::AddDocumentRequest_Document*>(
      &::qq::_AddDocumentRequest_Document_default_instance_);
}
::qq::AddDocumentRequest_Document* AddDocumentRequest::mutable_document() {
  
  if (document_ == NULL) {
    document_ = new ::qq::AddDocumentRequest_Document;
  }
  // @@protoc_insertion_point(field_mutable:qq.AddDocumentRequest.document)
  return document_;
}
::qq::AddDocumentRequest_Document* AddDocumentRequest::release_document() {
  // @@protoc_insertion_point(field_release:qq.AddDocumentRequest.document)
  
  ::qq::AddDocumentRequest_Document* temp = document_;
  document_ = NULL;
  return temp;
}
void AddDocumentRequest::set_allocated_document(::qq::AddDocumentRequest_Document* document) {
  delete document_;
  document_ = document;
  if (document) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:qq.AddDocumentRequest.document)
}

// .qq.AddDocumentRequest.Options options = 2;
bool AddDocumentRequest::has_options() const {
  return this != internal_default_instance() && options_ != NULL;
}
void AddDocumentRequest::clear_options() {
  if (GetArenaNoVirtual() == NULL && options_ != NULL) delete options_;
  options_ = NULL;
}
const ::qq::AddDocumentRequest_Options& AddDocumentRequest::options() const {
  const ::qq::AddDocumentRequest_Options* p = options_;
  // @@protoc_insertion_point(field_get:qq.AddDocumentRequest.options)
  return p != NULL ? *p : *reinterpret_cast<const ::qq::AddDocumentRequest_Options*>(
      &::qq::_AddDocumentRequest_Options_default_instance_);
}
::qq::AddDocumentRequest_Options* AddDocumentRequest::mutable_options() {
  
  if (options_ == NULL) {
    options_ = new ::qq::AddDocumentRequest_Options;
  }
  // @@protoc_insertion_point(field_mutable:qq.AddDocumentRequest.options)
  return options_;
}
::qq::AddDocumentRequest_Options* AddDocumentRequest::release_options() {
  // @@protoc_insertion_point(field_release:qq.AddDocumentRequest.options)
  
  ::qq::AddDocumentRequest_Options* temp = options_;
  options_ = NULL;
  return temp;
}
void AddDocumentRequest::set_allocated_options(::qq::AddDocumentRequest_Options* options) {
  delete options_;
  options_ = options;
  if (options) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:qq.AddDocumentRequest.options)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StatusReply::kOkFieldNumber;
const int StatusReply::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StatusReply::StatusReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_qq_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qq.StatusReply)
}
StatusReply::StatusReply(const StatusReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  ok_ = from.ok_;
  // @@protoc_insertion_point(copy_constructor:qq.StatusReply)
}

void StatusReply::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ok_ = false;
  _cached_size_ = 0;
}

StatusReply::~StatusReply() {
  // @@protoc_insertion_point(destructor:qq.StatusReply)
  SharedDtor();
}

void StatusReply::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StatusReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StatusReply::descriptor() {
  protobuf_qq_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qq_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StatusReply& StatusReply::default_instance() {
  protobuf_qq_2eproto::InitDefaults();
  return *internal_default_instance();
}

StatusReply* StatusReply::New(::google::protobuf::Arena* arena) const {
  StatusReply* n = new StatusReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StatusReply::Clear() {
// @@protoc_insertion_point(message_clear_start:qq.StatusReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ok_ = false;
  _internal_metadata_.Clear();
}

bool StatusReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qq.StatusReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool ok = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ok_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qq.StatusReply.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qq.StatusReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qq.StatusReply)
  return false;
#undef DO_
}

void StatusReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qq.StatusReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->ok() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->ok(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qq.StatusReply.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qq.StatusReply)
}

::google::protobuf::uint8* StatusReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qq.StatusReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->ok() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->ok(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qq.StatusReply.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qq.StatusReply)
  return target;
}

size_t StatusReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qq.StatusReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // bool ok = 1;
  if (this->ok() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StatusReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qq.StatusReply)
  GOOGLE_DCHECK_NE(&from, this);
  const StatusReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StatusReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qq.StatusReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qq.StatusReply)
    MergeFrom(*source);
  }
}

void StatusReply::MergeFrom(const StatusReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qq.StatusReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.ok() != 0) {
    set_ok(from.ok());
  }
}

void StatusReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qq.StatusReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatusReply::CopyFrom(const StatusReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qq.StatusReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatusReply::IsInitialized() const {
  return true;
}

void StatusReply::Swap(StatusReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StatusReply::InternalSwap(StatusReply* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(ok_, other->ok_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StatusReply::GetMetadata() const {
  protobuf_qq_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qq_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StatusReply

// bool ok = 1;
void StatusReply::clear_ok() {
  ok_ = false;
}
bool StatusReply::ok() const {
  // @@protoc_insertion_point(field_get:qq.StatusReply.ok)
  return ok_;
}
void StatusReply::set_ok(bool value) {
  
  ok_ = value;
  // @@protoc_insertion_point(field_set:qq.StatusReply.ok)
}

// string message = 2;
void StatusReply::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StatusReply::message() const {
  // @@protoc_insertion_point(field_get:qq.StatusReply.message)
  return message_.GetNoArena();
}
void StatusReply::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qq.StatusReply.message)
}
#if LANG_CXX11
void StatusReply::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qq.StatusReply.message)
}
#endif
void StatusReply::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qq.StatusReply.message)
}
void StatusReply::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qq.StatusReply.message)
}
::std::string* StatusReply::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:qq.StatusReply.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StatusReply::release_message() {
  // @@protoc_insertion_point(field_release:qq.StatusReply.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StatusReply::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:qq.StatusReply.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HelloRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HelloRequest::HelloRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_qq_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qq.HelloRequest)
}
HelloRequest::HelloRequest(const HelloRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:qq.HelloRequest)
}

void HelloRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

HelloRequest::~HelloRequest() {
  // @@protoc_insertion_point(destructor:qq.HelloRequest)
  SharedDtor();
}

void HelloRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HelloRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HelloRequest::descriptor() {
  protobuf_qq_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qq_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HelloRequest& HelloRequest::default_instance() {
  protobuf_qq_2eproto::InitDefaults();
  return *internal_default_instance();
}

HelloRequest* HelloRequest::New(::google::protobuf::Arena* arena) const {
  HelloRequest* n = new HelloRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HelloRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:qq.HelloRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool HelloRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qq.HelloRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qq.HelloRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qq.HelloRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qq.HelloRequest)
  return false;
#undef DO_
}

void HelloRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qq.HelloRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qq.HelloRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qq.HelloRequest)
}

::google::protobuf::uint8* HelloRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qq.HelloRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qq.HelloRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qq.HelloRequest)
  return target;
}

size_t HelloRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qq.HelloRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HelloRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qq.HelloRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HelloRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HelloRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qq.HelloRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qq.HelloRequest)
    MergeFrom(*source);
  }
}

void HelloRequest::MergeFrom(const HelloRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qq.HelloRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void HelloRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qq.HelloRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HelloRequest::CopyFrom(const HelloRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qq.HelloRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelloRequest::IsInitialized() const {
  return true;
}

void HelloRequest::Swap(HelloRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HelloRequest::InternalSwap(HelloRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HelloRequest::GetMetadata() const {
  protobuf_qq_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qq_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HelloRequest

// string name = 1;
void HelloRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HelloRequest::name() const {
  // @@protoc_insertion_point(field_get:qq.HelloRequest.name)
  return name_.GetNoArena();
}
void HelloRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qq.HelloRequest.name)
}
#if LANG_CXX11
void HelloRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qq.HelloRequest.name)
}
#endif
void HelloRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qq.HelloRequest.name)
}
void HelloRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qq.HelloRequest.name)
}
::std::string* HelloRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:qq.HelloRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HelloRequest::release_name() {
  // @@protoc_insertion_point(field_release:qq.HelloRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HelloRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:qq.HelloRequest.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HelloReply::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HelloReply::HelloReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_qq_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qq.HelloReply)
}
HelloReply::HelloReply(const HelloReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:qq.HelloReply)
}

void HelloReply::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

HelloReply::~HelloReply() {
  // @@protoc_insertion_point(destructor:qq.HelloReply)
  SharedDtor();
}

void HelloReply::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HelloReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HelloReply::descriptor() {
  protobuf_qq_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qq_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HelloReply& HelloReply::default_instance() {
  protobuf_qq_2eproto::InitDefaults();
  return *internal_default_instance();
}

HelloReply* HelloReply::New(::google::protobuf::Arena* arena) const {
  HelloReply* n = new HelloReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HelloReply::Clear() {
// @@protoc_insertion_point(message_clear_start:qq.HelloReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool HelloReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qq.HelloReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qq.HelloReply.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qq.HelloReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qq.HelloReply)
  return false;
#undef DO_
}

void HelloReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qq.HelloReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qq.HelloReply.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qq.HelloReply)
}

::google::protobuf::uint8* HelloReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qq.HelloReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qq.HelloReply.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qq.HelloReply)
  return target;
}

size_t HelloReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qq.HelloReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HelloReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qq.HelloReply)
  GOOGLE_DCHECK_NE(&from, this);
  const HelloReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HelloReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qq.HelloReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qq.HelloReply)
    MergeFrom(*source);
  }
}

void HelloReply::MergeFrom(const HelloReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qq.HelloReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void HelloReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qq.HelloReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HelloReply::CopyFrom(const HelloReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qq.HelloReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelloReply::IsInitialized() const {
  return true;
}

void HelloReply::Swap(HelloReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HelloReply::InternalSwap(HelloReply* other) {
  using std::swap;
  message_.Swap(&other->message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HelloReply::GetMetadata() const {
  protobuf_qq_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qq_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HelloReply

// string message = 1;
void HelloReply::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HelloReply::message() const {
  // @@protoc_insertion_point(field_get:qq.HelloReply.message)
  return message_.GetNoArena();
}
void HelloReply::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qq.HelloReply.message)
}
#if LANG_CXX11
void HelloReply::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qq.HelloReply.message)
}
#endif
void HelloReply::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qq.HelloReply.message)
}
void HelloReply::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qq.HelloReply.message)
}
::std::string* HelloReply::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:qq.HelloReply.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HelloReply::release_message() {
  // @@protoc_insertion_point(field_release:qq.HelloReply.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HelloReply::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:qq.HelloReply.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace qq

// @@protoc_insertion_point(global_scope)
