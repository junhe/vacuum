// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: posting_message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "posting_message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace posting_message {
class doc_infoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<doc_info>
     _instance;
} _doc_info_default_instance_;
class OffsetDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Offset>
     _instance;
} _Offset_default_instance_;
class PostingDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Posting>
     _instance;
} _Posting_default_instance_;
class PostingListDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PostingList>
     _instance;
} _PostingList_default_instance_;

namespace protobuf_posting_5fmessage_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(doc_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(doc_info, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(doc_info, term_frequency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(doc_info, positions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Offset, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Offset, start_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Offset, end_offset_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Posting, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Posting, docid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Posting, term_frequency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Posting, positions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PostingList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PostingList, num_postings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PostingList, postings_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(doc_info)},
  { 8, -1, sizeof(Offset)},
  { 15, -1, sizeof(Posting)},
  { 23, -1, sizeof(PostingList)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_doc_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Offset_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Posting_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PostingList_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "posting_message.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _doc_info_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_doc_info_default_instance_);_Offset_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Offset_default_instance_);_Posting_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Posting_default_instance_);_PostingList_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PostingList_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025posting_message.proto\022\017posting_message"
      "\"A\n\010doc_info\022\n\n\002id\030\001 \001(\005\022\026\n\016term_frequen"
      "cy\030\002 \001(\005\022\021\n\tpositions\030\003 \003(\005\"2\n\006Offset\022\024\n"
      "\014start_offset\030\001 \001(\005\022\022\n\nend_offset\030\002 \001(\005\""
      "\\\n\007Posting\022\r\n\005docID\030\001 \001(\005\022\026\n\016term_freque"
      "ncy\030\002 \001(\005\022*\n\tpositions\030\003 \003(\0132\027.posting_m"
      "essage.Offset\"O\n\013PostingList\022\024\n\014num_post"
      "ings\030\001 \001(\005\022*\n\010postings\030\002 \003(\0132\030.posting_m"
      "essage.Postingb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 342);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "posting_message.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_posting_5fmessage_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int doc_info::kIdFieldNumber;
const int doc_info::kTermFrequencyFieldNumber;
const int doc_info::kPositionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

doc_info::doc_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_posting_5fmessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:posting_message.doc_info)
}
doc_info::doc_info(const doc_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      positions_(from.positions_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&term_frequency_) -
    reinterpret_cast<char*>(&id_)) + sizeof(term_frequency_));
  // @@protoc_insertion_point(copy_constructor:posting_message.doc_info)
}

void doc_info::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&term_frequency_) -
      reinterpret_cast<char*>(&id_)) + sizeof(term_frequency_));
  _cached_size_ = 0;
}

doc_info::~doc_info() {
  // @@protoc_insertion_point(destructor:posting_message.doc_info)
  SharedDtor();
}

void doc_info::SharedDtor() {
}

void doc_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* doc_info::descriptor() {
  protobuf_posting_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_posting_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const doc_info& doc_info::default_instance() {
  protobuf_posting_5fmessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

doc_info* doc_info::New(::google::protobuf::Arena* arena) const {
  doc_info* n = new doc_info;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void doc_info::Clear() {
// @@protoc_insertion_point(message_clear_start:posting_message.doc_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  positions_.Clear();
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&term_frequency_) -
      reinterpret_cast<char*>(&id_)) + sizeof(term_frequency_));
  _internal_metadata_.Clear();
}

bool doc_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:posting_message.doc_info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 term_frequency = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &term_frequency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 positions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_positions())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 26u, input, this->mutable_positions())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:posting_message.doc_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:posting_message.doc_info)
  return false;
#undef DO_
}

void doc_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:posting_message.doc_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // int32 term_frequency = 2;
  if (this->term_frequency() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->term_frequency(), output);
  }

  // repeated int32 positions = 3;
  if (this->positions_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _positions_cached_byte_size_));
  }
  for (int i = 0, n = this->positions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->positions(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:posting_message.doc_info)
}

::google::protobuf::uint8* doc_info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:posting_message.doc_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // int32 term_frequency = 2;
  if (this->term_frequency() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->term_frequency(), target);
  }

  // repeated int32 positions = 3;
  if (this->positions_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _positions_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->positions_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:posting_message.doc_info)
  return target;
}

size_t doc_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:posting_message.doc_info)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 positions = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->positions_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _positions_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 term_frequency = 2;
  if (this->term_frequency() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->term_frequency());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void doc_info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:posting_message.doc_info)
  GOOGLE_DCHECK_NE(&from, this);
  const doc_info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const doc_info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:posting_message.doc_info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:posting_message.doc_info)
    MergeFrom(*source);
  }
}

void doc_info::MergeFrom(const doc_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:posting_message.doc_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  positions_.MergeFrom(from.positions_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.term_frequency() != 0) {
    set_term_frequency(from.term_frequency());
  }
}

void doc_info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:posting_message.doc_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void doc_info::CopyFrom(const doc_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:posting_message.doc_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool doc_info::IsInitialized() const {
  return true;
}

void doc_info::Swap(doc_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void doc_info::InternalSwap(doc_info* other) {
  using std::swap;
  positions_.InternalSwap(&other->positions_);
  swap(id_, other->id_);
  swap(term_frequency_, other->term_frequency_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata doc_info::GetMetadata() const {
  protobuf_posting_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_posting_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// doc_info

// int32 id = 1;
void doc_info::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 doc_info::id() const {
  // @@protoc_insertion_point(field_get:posting_message.doc_info.id)
  return id_;
}
void doc_info::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:posting_message.doc_info.id)
}

// int32 term_frequency = 2;
void doc_info::clear_term_frequency() {
  term_frequency_ = 0;
}
::google::protobuf::int32 doc_info::term_frequency() const {
  // @@protoc_insertion_point(field_get:posting_message.doc_info.term_frequency)
  return term_frequency_;
}
void doc_info::set_term_frequency(::google::protobuf::int32 value) {
  
  term_frequency_ = value;
  // @@protoc_insertion_point(field_set:posting_message.doc_info.term_frequency)
}

// repeated int32 positions = 3;
int doc_info::positions_size() const {
  return positions_.size();
}
void doc_info::clear_positions() {
  positions_.Clear();
}
::google::protobuf::int32 doc_info::positions(int index) const {
  // @@protoc_insertion_point(field_get:posting_message.doc_info.positions)
  return positions_.Get(index);
}
void doc_info::set_positions(int index, ::google::protobuf::int32 value) {
  positions_.Set(index, value);
  // @@protoc_insertion_point(field_set:posting_message.doc_info.positions)
}
void doc_info::add_positions(::google::protobuf::int32 value) {
  positions_.Add(value);
  // @@protoc_insertion_point(field_add:posting_message.doc_info.positions)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
doc_info::positions() const {
  // @@protoc_insertion_point(field_list:posting_message.doc_info.positions)
  return positions_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
doc_info::mutable_positions() {
  // @@protoc_insertion_point(field_mutable_list:posting_message.doc_info.positions)
  return &positions_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Offset::kStartOffsetFieldNumber;
const int Offset::kEndOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Offset::Offset()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_posting_5fmessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:posting_message.Offset)
}
Offset::Offset(const Offset& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_offset_, &from.start_offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_offset_) -
    reinterpret_cast<char*>(&start_offset_)) + sizeof(end_offset_));
  // @@protoc_insertion_point(copy_constructor:posting_message.Offset)
}

void Offset::SharedCtor() {
  ::memset(&start_offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_offset_) -
      reinterpret_cast<char*>(&start_offset_)) + sizeof(end_offset_));
  _cached_size_ = 0;
}

Offset::~Offset() {
  // @@protoc_insertion_point(destructor:posting_message.Offset)
  SharedDtor();
}

void Offset::SharedDtor() {
}

void Offset::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Offset::descriptor() {
  protobuf_posting_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_posting_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Offset& Offset::default_instance() {
  protobuf_posting_5fmessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

Offset* Offset::New(::google::protobuf::Arena* arena) const {
  Offset* n = new Offset;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Offset::Clear() {
// @@protoc_insertion_point(message_clear_start:posting_message.Offset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&start_offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_offset_) -
      reinterpret_cast<char*>(&start_offset_)) + sizeof(end_offset_));
  _internal_metadata_.Clear();
}

bool Offset::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:posting_message.Offset)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 start_offset = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &start_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 end_offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &end_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:posting_message.Offset)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:posting_message.Offset)
  return false;
#undef DO_
}

void Offset::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:posting_message.Offset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 start_offset = 1;
  if (this->start_offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->start_offset(), output);
  }

  // int32 end_offset = 2;
  if (this->end_offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->end_offset(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:posting_message.Offset)
}

::google::protobuf::uint8* Offset::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:posting_message.Offset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 start_offset = 1;
  if (this->start_offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->start_offset(), target);
  }

  // int32 end_offset = 2;
  if (this->end_offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->end_offset(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:posting_message.Offset)
  return target;
}

size_t Offset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:posting_message.Offset)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 start_offset = 1;
  if (this->start_offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->start_offset());
  }

  // int32 end_offset = 2;
  if (this->end_offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->end_offset());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Offset::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:posting_message.Offset)
  GOOGLE_DCHECK_NE(&from, this);
  const Offset* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Offset>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:posting_message.Offset)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:posting_message.Offset)
    MergeFrom(*source);
  }
}

void Offset::MergeFrom(const Offset& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:posting_message.Offset)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start_offset() != 0) {
    set_start_offset(from.start_offset());
  }
  if (from.end_offset() != 0) {
    set_end_offset(from.end_offset());
  }
}

void Offset::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:posting_message.Offset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Offset::CopyFrom(const Offset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:posting_message.Offset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Offset::IsInitialized() const {
  return true;
}

void Offset::Swap(Offset* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Offset::InternalSwap(Offset* other) {
  using std::swap;
  swap(start_offset_, other->start_offset_);
  swap(end_offset_, other->end_offset_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Offset::GetMetadata() const {
  protobuf_posting_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_posting_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Offset

// int32 start_offset = 1;
void Offset::clear_start_offset() {
  start_offset_ = 0;
}
::google::protobuf::int32 Offset::start_offset() const {
  // @@protoc_insertion_point(field_get:posting_message.Offset.start_offset)
  return start_offset_;
}
void Offset::set_start_offset(::google::protobuf::int32 value) {
  
  start_offset_ = value;
  // @@protoc_insertion_point(field_set:posting_message.Offset.start_offset)
}

// int32 end_offset = 2;
void Offset::clear_end_offset() {
  end_offset_ = 0;
}
::google::protobuf::int32 Offset::end_offset() const {
  // @@protoc_insertion_point(field_get:posting_message.Offset.end_offset)
  return end_offset_;
}
void Offset::set_end_offset(::google::protobuf::int32 value) {
  
  end_offset_ = value;
  // @@protoc_insertion_point(field_set:posting_message.Offset.end_offset)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Posting::kDocIDFieldNumber;
const int Posting::kTermFrequencyFieldNumber;
const int Posting::kPositionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Posting::Posting()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_posting_5fmessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:posting_message.Posting)
}
Posting::Posting(const Posting& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      positions_(from.positions_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&docid_, &from.docid_,
    static_cast<size_t>(reinterpret_cast<char*>(&term_frequency_) -
    reinterpret_cast<char*>(&docid_)) + sizeof(term_frequency_));
  // @@protoc_insertion_point(copy_constructor:posting_message.Posting)
}

void Posting::SharedCtor() {
  ::memset(&docid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&term_frequency_) -
      reinterpret_cast<char*>(&docid_)) + sizeof(term_frequency_));
  _cached_size_ = 0;
}

Posting::~Posting() {
  // @@protoc_insertion_point(destructor:posting_message.Posting)
  SharedDtor();
}

void Posting::SharedDtor() {
}

void Posting::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Posting::descriptor() {
  protobuf_posting_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_posting_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Posting& Posting::default_instance() {
  protobuf_posting_5fmessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

Posting* Posting::New(::google::protobuf::Arena* arena) const {
  Posting* n = new Posting;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Posting::Clear() {
// @@protoc_insertion_point(message_clear_start:posting_message.Posting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  positions_.Clear();
  ::memset(&docid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&term_frequency_) -
      reinterpret_cast<char*>(&docid_)) + sizeof(term_frequency_));
  _internal_metadata_.Clear();
}

bool Posting::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:posting_message.Posting)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 docID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &docid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 term_frequency = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &term_frequency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .posting_message.Offset positions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_positions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:posting_message.Posting)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:posting_message.Posting)
  return false;
#undef DO_
}

void Posting::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:posting_message.Posting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 docID = 1;
  if (this->docid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->docid(), output);
  }

  // int32 term_frequency = 2;
  if (this->term_frequency() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->term_frequency(), output);
  }

  // repeated .posting_message.Offset positions = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->positions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->positions(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:posting_message.Posting)
}

::google::protobuf::uint8* Posting::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:posting_message.Posting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 docID = 1;
  if (this->docid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->docid(), target);
  }

  // int32 term_frequency = 2;
  if (this->term_frequency() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->term_frequency(), target);
  }

  // repeated .posting_message.Offset positions = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->positions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->positions(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:posting_message.Posting)
  return target;
}

size_t Posting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:posting_message.Posting)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .posting_message.Offset positions = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->positions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->positions(static_cast<int>(i)));
    }
  }

  // int32 docID = 1;
  if (this->docid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->docid());
  }

  // int32 term_frequency = 2;
  if (this->term_frequency() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->term_frequency());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Posting::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:posting_message.Posting)
  GOOGLE_DCHECK_NE(&from, this);
  const Posting* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Posting>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:posting_message.Posting)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:posting_message.Posting)
    MergeFrom(*source);
  }
}

void Posting::MergeFrom(const Posting& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:posting_message.Posting)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  positions_.MergeFrom(from.positions_);
  if (from.docid() != 0) {
    set_docid(from.docid());
  }
  if (from.term_frequency() != 0) {
    set_term_frequency(from.term_frequency());
  }
}

void Posting::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:posting_message.Posting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Posting::CopyFrom(const Posting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:posting_message.Posting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Posting::IsInitialized() const {
  return true;
}

void Posting::Swap(Posting* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Posting::InternalSwap(Posting* other) {
  using std::swap;
  positions_.InternalSwap(&other->positions_);
  swap(docid_, other->docid_);
  swap(term_frequency_, other->term_frequency_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Posting::GetMetadata() const {
  protobuf_posting_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_posting_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Posting

// int32 docID = 1;
void Posting::clear_docid() {
  docid_ = 0;
}
::google::protobuf::int32 Posting::docid() const {
  // @@protoc_insertion_point(field_get:posting_message.Posting.docID)
  return docid_;
}
void Posting::set_docid(::google::protobuf::int32 value) {
  
  docid_ = value;
  // @@protoc_insertion_point(field_set:posting_message.Posting.docID)
}

// int32 term_frequency = 2;
void Posting::clear_term_frequency() {
  term_frequency_ = 0;
}
::google::protobuf::int32 Posting::term_frequency() const {
  // @@protoc_insertion_point(field_get:posting_message.Posting.term_frequency)
  return term_frequency_;
}
void Posting::set_term_frequency(::google::protobuf::int32 value) {
  
  term_frequency_ = value;
  // @@protoc_insertion_point(field_set:posting_message.Posting.term_frequency)
}

// repeated .posting_message.Offset positions = 3;
int Posting::positions_size() const {
  return positions_.size();
}
void Posting::clear_positions() {
  positions_.Clear();
}
const ::posting_message::Offset& Posting::positions(int index) const {
  // @@protoc_insertion_point(field_get:posting_message.Posting.positions)
  return positions_.Get(index);
}
::posting_message::Offset* Posting::mutable_positions(int index) {
  // @@protoc_insertion_point(field_mutable:posting_message.Posting.positions)
  return positions_.Mutable(index);
}
::posting_message::Offset* Posting::add_positions() {
  // @@protoc_insertion_point(field_add:posting_message.Posting.positions)
  return positions_.Add();
}
::google::protobuf::RepeatedPtrField< ::posting_message::Offset >*
Posting::mutable_positions() {
  // @@protoc_insertion_point(field_mutable_list:posting_message.Posting.positions)
  return &positions_;
}
const ::google::protobuf::RepeatedPtrField< ::posting_message::Offset >&
Posting::positions() const {
  // @@protoc_insertion_point(field_list:posting_message.Posting.positions)
  return positions_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PostingList::kNumPostingsFieldNumber;
const int PostingList::kPostingsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PostingList::PostingList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_posting_5fmessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:posting_message.PostingList)
}
PostingList::PostingList(const PostingList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      postings_(from.postings_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  num_postings_ = from.num_postings_;
  // @@protoc_insertion_point(copy_constructor:posting_message.PostingList)
}

void PostingList::SharedCtor() {
  num_postings_ = 0;
  _cached_size_ = 0;
}

PostingList::~PostingList() {
  // @@protoc_insertion_point(destructor:posting_message.PostingList)
  SharedDtor();
}

void PostingList::SharedDtor() {
}

void PostingList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PostingList::descriptor() {
  protobuf_posting_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_posting_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PostingList& PostingList::default_instance() {
  protobuf_posting_5fmessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

PostingList* PostingList::New(::google::protobuf::Arena* arena) const {
  PostingList* n = new PostingList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PostingList::Clear() {
// @@protoc_insertion_point(message_clear_start:posting_message.PostingList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  postings_.Clear();
  num_postings_ = 0;
  _internal_metadata_.Clear();
}

bool PostingList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:posting_message.PostingList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 num_postings = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_postings_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .posting_message.Posting postings = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_postings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:posting_message.PostingList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:posting_message.PostingList)
  return false;
#undef DO_
}

void PostingList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:posting_message.PostingList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 num_postings = 1;
  if (this->num_postings() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num_postings(), output);
  }

  // repeated .posting_message.Posting postings = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->postings_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->postings(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:posting_message.PostingList)
}

::google::protobuf::uint8* PostingList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:posting_message.PostingList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 num_postings = 1;
  if (this->num_postings() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num_postings(), target);
  }

  // repeated .posting_message.Posting postings = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->postings_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->postings(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:posting_message.PostingList)
  return target;
}

size_t PostingList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:posting_message.PostingList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .posting_message.Posting postings = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->postings_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->postings(static_cast<int>(i)));
    }
  }

  // int32 num_postings = 1;
  if (this->num_postings() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_postings());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PostingList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:posting_message.PostingList)
  GOOGLE_DCHECK_NE(&from, this);
  const PostingList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PostingList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:posting_message.PostingList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:posting_message.PostingList)
    MergeFrom(*source);
  }
}

void PostingList::MergeFrom(const PostingList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:posting_message.PostingList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  postings_.MergeFrom(from.postings_);
  if (from.num_postings() != 0) {
    set_num_postings(from.num_postings());
  }
}

void PostingList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:posting_message.PostingList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PostingList::CopyFrom(const PostingList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:posting_message.PostingList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PostingList::IsInitialized() const {
  return true;
}

void PostingList::Swap(PostingList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PostingList::InternalSwap(PostingList* other) {
  using std::swap;
  postings_.InternalSwap(&other->postings_);
  swap(num_postings_, other->num_postings_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PostingList::GetMetadata() const {
  protobuf_posting_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_posting_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PostingList

// int32 num_postings = 1;
void PostingList::clear_num_postings() {
  num_postings_ = 0;
}
::google::protobuf::int32 PostingList::num_postings() const {
  // @@protoc_insertion_point(field_get:posting_message.PostingList.num_postings)
  return num_postings_;
}
void PostingList::set_num_postings(::google::protobuf::int32 value) {
  
  num_postings_ = value;
  // @@protoc_insertion_point(field_set:posting_message.PostingList.num_postings)
}

// repeated .posting_message.Posting postings = 2;
int PostingList::postings_size() const {
  return postings_.size();
}
void PostingList::clear_postings() {
  postings_.Clear();
}
const ::posting_message::Posting& PostingList::postings(int index) const {
  // @@protoc_insertion_point(field_get:posting_message.PostingList.postings)
  return postings_.Get(index);
}
::posting_message::Posting* PostingList::mutable_postings(int index) {
  // @@protoc_insertion_point(field_mutable:posting_message.PostingList.postings)
  return postings_.Mutable(index);
}
::posting_message::Posting* PostingList::add_postings() {
  // @@protoc_insertion_point(field_add:posting_message.PostingList.postings)
  return postings_.Add();
}
::google::protobuf::RepeatedPtrField< ::posting_message::Posting >*
PostingList::mutable_postings() {
  // @@protoc_insertion_point(field_mutable_list:posting_message.PostingList.postings)
  return &postings_;
}
const ::google::protobuf::RepeatedPtrField< ::posting_message::Posting >&
PostingList::postings() const {
  // @@protoc_insertion_point(field_list:posting_message.PostingList.postings)
  return postings_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace posting_message

// @@protoc_insertion_point(global_scope)
